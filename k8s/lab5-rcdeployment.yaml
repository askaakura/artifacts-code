# This scenario shows: 
# - how to roll out deployments with 2 different strategy: recreate and rollingUpdate, 
# - how to save/record deployments' revision while rolling out with "--record" (e.g. changing image): 
# # -- imperative: "kubectl set image deployment rcdeployment nginx=httpd --record", 
# # -- declerative, edit file: "kubectl edit deployment rolldeployment --record", 
# - how to rollback (rollout undo) the desired deployment revisions: 
# # -- "kubectl rollout undo deployment rolldeployment --to-revision=2", 
# - how to pause/resume rollout: -- pause: "kubectl rollout pause deployment rolldeployment", 
# # -- resume: "kubectl rollout resume deployment rolldeployment", 
# - how to see the status of rollout deployment: 
# # -- "kubectl rollout status deployment rolldeployment -w".

apiVersion: apps/v1
kind: Deployment
metadata:
  name: lab5-rcdeployment
  labels:
    team: development
spec:
  replicas: 5                        # create 5 replicas
  selector:
    matchLabels:                     # labelselector of deployment: selects pods which have "app:recreate" labels
      app: recreate
  strategy:                          # deployment roll up strategy: recreate => Delete all pods firstly and create Pods from scratch.
    type: Recreate
  template:
    metadata:
      labels:                        # labels the pod with "app:recreate" 
        app: recreate
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80

